<?php

/**
 * @file
 * Install.
 */

/**
 * Implements hook_schema().
 */
function productos_schema() {
  $schema = [];
  $schema['productos'] = [
    'fields' => [
      'id_product' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique person ID.',
      ],
      'name_product' => [
        'description' => 'nombre del producto',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'precio_unitario' => [
        'description' => 'precio unitario de el product o servicio',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'name_brand' => [
        'description' => 'brand name',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'description' => [
        'description' => 'Descrpcion del producto',
        'type' => 'text',
      ],
      'stock' => [
        'description' => 'cantida de productos en inventario inicio',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'stock_restante' => [
        'description' => 'cantida de productos restante para la venta',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'minima_compra' => [
        'description' => 'cantida de productos restante para la venta',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'category' => [
        'description' => 'CategorÃ­a del producto ',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'tipo_producto' => [
        'description' => 'servicios: 1, bien o insumo: 2',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'horas_entrega' => [
        'description' => 'tiempo estimado de entrega en horas',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'descuento_reila' => [
        'description' => 'descuento condicionado por cantidad de compra',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],

      'utilidad_neta' => [
        'description' => 'utilidad en porsentaje a acordado con el 5%, 10%, 20% provedor.',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],

      'guia_uso_producto_url' => [
        'description' => "url guia de uso del producto",
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'estado_producto' => [
        'description' => "ocult o muestra el producto",
        'type' => 'char',
        'length' => 1,
        'not null' => TRUE,
        'default' => 0,
      ],

      'size' => [
        'description' => "Product size",
        'type' => 'varchar',
        'length' => 60,
        'default' => '',
      ],
      'color' => [
        'description' => "Product color",
        'type' => 'varchar',
        'length' => 60,
        'default' => '',
      ],

      'created' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

      'update' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

    ],
    'primary key' => ['id_product'],
  ];

  $schema['imagen_peoductos'] = [
    'description' => 'imagen eventos.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'url_image' => [
        'description' => 'url de la imagenes del evento',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'url_image_mobile' => [
        'description' => 'url change de la imagenes del evento mobile',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'id_product' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],

      'created' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

      'update' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

    ],
    'primary key' => ['id'],
  ];

  $schema['brand_data'] = [
    'description' => 'datos de las marcas para vestir los eventos.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'url_banner' => [
        'description' => 'Banner de la marca',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'copy1' => [
        'description' => 'texto de la marca primario',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'copy2' => [
        'description' => 'texto marca secundario ',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'brand' => [
        'description' => 'Nombre de la marca. ',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'url_image_brand' => [
        'description' => 'Imagen Brand logo',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'email' => [
        'description' => 'email de la marca',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'phlone_brand' => [
        'description' => 'telefono de la marca',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'nit_brand' => [
        'description' => 'nit de la marca',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],

      'created' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

      'update' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

    ],
    'primary key' => ['id'],
  ];

  $schema['client_user'] = [
    'description' => 'usuarios eventos.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'created' => [
        'description' => 'timestamp created',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'name' => [
        'description' => '',
        'type' => 'varchar',
        'length' => 125,
        'default' => '',
      ],
      'last_name' => [
        'description' => '',
        'type' => 'varchar',
        'length' => 125,
        'default' => '',
      ],
      'type_document' => [
        'description' => 'Tipo de documento',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'identification_card' => [
        'description' => '',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'email' => [
        'type' => 'varchar',
        'length' => 200,
      ],
      'phone' => [
        'type' => 'varchar',
        'length' => 100,
      ],

      'estado' => [
        'description' => "Owner's department",
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 120,
      ],
      'city' => [
        'description' => "Owner's city",
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 120,
      ],
      'address' => [
        'description' => "Owner's address",
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 255,
      ],
      'additional_address_information' => [
        'description' => "Additional address information",
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 255,
      ],
      'postal_code' => [
        'description' => "Owner's postal code",
        'type' => 'int',
        'not null' => FALSE,
      ],
    
      'type_document' => [
        'description' => 'Tipo de documento',
        'type' => 'int',
        'default' => 0,
      ],
      'identification_card' => [
        'description' => '',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'estado_client' => [
        'description' => "estado del cliente, define si este cliente esta bloqiado por tiempo de inatividad o se dio de alta.",
        'type' => 'char',
        'length' => 1,
        'not null' => FALSE,
        'default' => 0,
      ],
      'phone' => [
        'type' => 'varchar',
        'length' => 100,
      ],
      'id_productos' => [
        'type' => 'text',
        'description' => " json obj turno",
      ],
      'create' => [
        'description' => 'fecha de creacion ',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ],
      'updte' => [
        'description' => 'fecha de creacion ',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ],
    ],
    'primary key' => ['id'],
  ];
  $schema['turnos'] = [
    'description' => 'turno de producto tipo servicios.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'turno_dia' => [
        'description' => 'se guarda turno por dia un producto de tipo servicio podra tener 8 e quivalentes a una hora cada turno  o 2 horaras  equivalente a 4 turnos al dia,  turnos por dia  ',
        'type' => 'text',
      ],
      'ids_productos' => [
        'description' => 'url change de la imagenes del evento mobile',
        'type' => 'text',
      ],
      'fecha_de_turnos' => [
        'description' => 'fecha del dia en la que se creo el listado de turnos. siendo para ese dia los turno, se deve validar que los turnos esten creados de un dia para otro.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ],

      'estado_turno' => [
        'description' => 'un turno esta activo, reservado, o finalizado. este turno como finalizado cuando falte una hora para darse el turno ',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ],

      'create' => [
        'description' => 'fecha de creacion ',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ],

      'updte' => [
        'description' => 'fecha de creacion ',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ],

    ],
    'primary key' => ['id'],
  ];

  $schema['pedidos'] = [
    'description' => 'imagen eventos.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'id_cliente' => [
        'description' => 'url de la imagenes del evento',
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
      ],
      'ids_productos' => [
        'description' => 'json  de productos id ',
        'type' => 'text',
      ],
      'id_product' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'created' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

      'update' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "fechacreacion evento",
      ],

    ],
    'primary key' => ['id'],
  ];

  return $schema;
}

/**
 * Add fields to events_tapit table and user_for_event table.
 */
function productos_update_8901(&$sandbox) {
  $database = \Drupal::database();
  $schema = $database->schema();
  $table_one = 'productos';
  $table_two = 'user_for_event';
  $url_tyc = [
    'description' => "Url terms and conditions",
    'type' => 'varchar',
    'length' => 255,
    'default' => '',
  ];
  $require_location = [
    'description' => "Boolean field to collect location data",
    'type' => 'char',
    'length' => 1,
    'not null' => TRUE,
    'default' => 0,
  ];
  $require_redirect = [
    'description' => "Boolean field to define redirection to url_landing_promo",
    'type' => 'char',
    'length' => 1,
    'not null' => TRUE,
    'default' => 0,
  ];
  $department = [
    'description' => "Owner's department",
    'type' => 'varchar',
    'not null' => FALSE,
    'length' => 120,
  ];
  $city = [
    'description' => "Owner's city",
    'type' => 'varchar',
    'not null' => FALSE,
    'length' => 120,
  ];
  $address = [
    'description' => "Owner's address",
    'type' => 'varchar',
    'not null' => FALSE,
    'length' => 255,
  ];
  $additional_address_information = [
    'description' => "Additional address information",
    'type' => 'varchar',
    'not null' => FALSE,
    'length' => 255,
  ];
  $postal_code = [
    'description' => "Owner's postal code",
    'type' => 'int',
    'not null' => FALSE,
  ];
  if ($schema->tableExists($table_one)) {
    if (!$schema->fieldExists($table_one, 'url_tyc')) {
      $schema->addField($table_one, 'url_tyc', $url_tyc);
    }
    if (!$schema->fieldExists($table_one, 'require_location')) {
      $schema->addField($table_one, 'require_location', $require_location);
    }
    if (!$schema->fieldExists($table_one, 'require_redirect')) {
      $schema->addField($table_one, 'require_redirect', $require_redirect);
    }
  }
  if ($schema->tableExists($table_two)) {
    if (!$schema->fieldExists($table_two, 'department')) {
      $schema->addField($table_two, 'department', $department);
    }
    if (!$schema->fieldExists($table_two, 'city')) {
      $schema->addField($table_two, 'city', $city);
    }
    if (!$schema->fieldExists($table_two, 'address')) {
      $schema->addField($table_two, 'address', $address);
    }
    if (!$schema->fieldExists($table_two, 'additional_address_information')) {
      $schema->addField($table_two, 'additional_address_information', $additional_address_information);
    }
    if (!$schema->fieldExists($table_two, 'postal_code')) {
      $schema->addField($table_two, 'postal_code', $postal_code);
    }
  }
}

/**
 * Add fields to productos table.
 */
function productos_update_8902(&$sandbox) {
  $database = \Drupal::database();
  $schema = $database->schema();
  $table = 'productos';
  $size = [
    'description' => "Product size",
    'type' => 'varchar',
    'length' => 60,
    'default' => '',
  ];
  $color = [
    'description' => "Product color",
    'type' => 'varchar',
    'length' => 60,
    'default' => '',
  ];
  if ($schema->tableExists($table)) {
    if (!$schema->fieldExists($table, 'size')) {
      $schema->addField($table, 'size', $size);
    }
    if (!$schema->fieldExists($table, 'color')) {
      $schema->addField($table, 'color', $color);
    }
  }
}

/**
 * Add fields to productos table.
 */
function productos_update_8903(&$sandbox) {
  $database = \Drupal::database();
  $schema = $database->schema();
  $table = 'productos';
  $status = [
    'description' => "Boolean field to enable/disable a event",
    'type' => 'char',
    'length' => 1,
    'not null' => TRUE,
    'default' => 1,
  ];
  if ($schema->tableExists($table)) {
    if (!$schema->fieldExists($table, 'status')) {
      $schema->addField($table, 'status', $status);
    }
  }
}
